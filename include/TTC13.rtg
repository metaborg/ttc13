regular tree grammar
  start Program
  productions
    ListStarOfDefinition0 -> ListPlusOfDefinition0
    ListStarOfDefinition0 -> <nil>()
    ListStarOfDefinition0 -> <conc>(ListStarOfDefinition0,ListStarOfDefinition0)
    ListPlusOfDefinition0 -> <conc>(ListStarOfDefinition0,ListPlusOfDefinition0)
    ListPlusOfDefinition0 -> <conc>(ListPlusOfDefinition0,ListStarOfDefinition0)
    ListPlusOfDefinition0 -> <conc>(ListPlusOfDefinition0,ListPlusOfDefinition0)
    ListPlusOfDefinition0 -> <cons>(Definition,ListStarOfDefinition0)
    ListStarOfStringChar0 -> <string>
    ListPlusOfStringChar0 -> <string>
    OptLit0               -> <string>
    Process               -> COMPLETION-Process(CONTENTCOMPLETE)
    Definition            -> COMPLETION-Definition(CONTENTCOMPLETE)
    Process               -> Par(Process,Process)
    Process               -> ExclOr(Process,Process)
    Process               -> Seq(Process,Process)
    Process               -> Token()
    Process               -> Event
    Definition            -> ProcessInst(Process)
    Definition            -> ProcessDef(ID,Process)
    ID                    -> COMPLETION-ID(CONTENTCOMPLETE)
    EventOp               -> COMPLETION-EventOp(CONTENTCOMPLETE)
    Event                 -> COMPLETION-Event(CONTENTCOMPLETE)
    EventOp               -> End()
    EventOp               -> Start()
    EventOp               -> Base(ID)
    Event                 -> Event(EventOp)
    Program               -> COMPLETION-Program(CONTENTCOMPLETE)
    Program               -> Program(ListStarOfDefinition0)
    EOF                   -> <string>
    CommentChar           -> <string>
    BackSlashChar         -> <string>
    StringChar            -> <string>
    STRING                -> <string>
    INT                   -> <string>
    ID                    -> <string>
