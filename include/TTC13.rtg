regular tree grammar
  start Start
  productions
    ListStarOfDefinition1 -> ListPlusOfDefinition1
    ListStarOfDefinition1 -> <nil>()
    ListStarOfDefinition1 -> <conc>(ListStarOfDefinition1,ListStarOfDefinition1)
    ListPlusOfDefinition1 -> <conc>(ListStarOfDefinition1,ListPlusOfDefinition1)
    ListPlusOfDefinition1 -> <conc>(ListPlusOfDefinition1,ListStarOfDefinition1)
    ListPlusOfDefinition1 -> <conc>(ListPlusOfDefinition1,ListPlusOfDefinition1)
    ListPlusOfDefinition1 -> <cons>(Definition,ListStarOfDefinition1)
    ListStarOfStringChar1 -> <string>
    ListPlusOfStringChar1 -> <string>
    OptLit1               -> <string>
    Process               -> Par(Process,Process)
    Process               -> Seq(Process,Process)
    Process               -> ExclOr(Process,Process)
    Process               -> InclOr(Process,Process)
    Process               -> Token()
    Process               -> Event
    Definition            -> ProcessInst(Process)
    Definition            -> ProcessDef(ID,Process)
    Definition            -> EventDef(ID)
    EventOp               -> Start()
    EventOp               -> End()
    EventOp               -> Catch()
    EventOp               -> Throw()
    Event                 -> EventCall(EventOp,ID)
    Event                 -> EventOp
    Event                 -> Event(ID)
    Program               -> Program(ListStarOfDefinition1)
    Start                 -> Program
    EOF                   -> <string>
    CommentChar           -> <string>
    BackSlashChar         -> <string>
    StringChar            -> <string>
    STRING                -> <string>
    INT                   -> <string>
    ID                    -> <string>
